{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto/./src/components/Api.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/utils/constants.js","webpack://mesto/./src/pages/index.js"],"sourcesContent":["export default class Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(this._baseUrl + '/cards', {\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(this._baseUrl + '/users/me', {\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n\r\n  setUserInfo(name, about) {\r\n    return fetch(this._baseUrl + '/users/me', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        about: about\r\n      })\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n\r\n  setUserAvatar(url) {\r\n    return fetch(this._baseUrl + '/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: url\r\n      })\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n\r\n  likeCard(cardId) {\r\n    return fetch(this._baseUrl + '/cards/' + cardId + '/likes ', {\r\n      method: 'PUT',\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n\r\n  dislikeCard(cardId) {\r\n    return fetch(this._baseUrl + '/cards/' + cardId + '/likes ', {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n\r\n  addNewCard(name, link) {\r\n    return fetch(this._baseUrl + '/cards', {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: name,\r\n        link: link\r\n      })\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n\r\n  removeCard(cardId) {\r\n    return fetch(this._baseUrl + '/cards/' + cardId, {\r\n      method: 'DELETE',\r\n      headers: this._headers\r\n    })\r\n      .then(res => this._checkResponse(res));\r\n  }\r\n}","export default class Section {\r\n  constructor({ data, renderer }, containerSelector) {\r\n    this._renderedItems = data;\r\n    this._renderer = renderer;\r\n    this._container = document.querySelector(containerSelector);\r\n  }\r\n\r\n  renderItems() {\r\n    this._renderedItems.forEach(item => {\r\n      this._renderer(item);\r\n    });\r\n  }\r\n\r\n  setItem(element) {\r\n    this._container.prepend(element);\r\n  }\r\n}","export default class Card {\r\n  constructor (\r\n      {id, name, link, likes, isMyLike, ownerId},\r\n      templateSelector,\r\n      handleCardClick,\r\n      handleCardLike,\r\n      handleCardDelete\r\n    ) {\r\n    this._id = id;\r\n    this._title = name;\r\n    this._image = link;\r\n    this._likes = likes;\r\n    this._likesCount = likes.length;\r\n    this._isMyLike = isMyLike;\r\n    this._ownerId = ownerId;\r\n    this._templateSelector = templateSelector;\r\n    this._handleCardClick = handleCardClick;\r\n    this._handleCardLike = handleCardLike;\r\n    this._handleCardDelete = handleCardDelete;\r\n    // console.log(this);\r\n  }\r\n\r\n  // статическое свойство для хранения моего ID\r\n  static myId = null;\r\n\r\n  _checkIsMyCard() {\r\n    return this._ownerId === Card.myId;\r\n  }\r\n\r\n  _getElement() {\r\n  \tconst cardElement = document\r\n      .querySelector(this._templateSelector)\r\n      .content\r\n      .querySelector('.gallery__item')\r\n      .cloneNode(true);\r\n\r\n    return cardElement;\r\n  }\r\n\r\n  generate() {\r\n    this._element = this._getElement();\r\n\r\n    this._elementPhoto = this._element.querySelector('.gallery__photo');\r\n    this._elementTitle = this._element.querySelector('.gallery__title');\r\n    this._elementTrash = this._element.querySelector('.gallery__remove-button');\r\n    this._elementLike = this._element.querySelector('.gallery__like-button');\r\n    this._elementCount = this._element.querySelector('.gallery__like-count');\r\n\r\n    this._elementPhoto.src = this._image;\r\n    this._elementPhoto.alt = this._title;\r\n    this._elementTitle.textContent = this._title;\r\n    this._elementCount.textContent = this._likesCount;\r\n\r\n    if (this._isMyLike) {\r\n      this._elementLike.classList.add('gallery__like-button_active');\r\n    }\r\n\r\n    this._setEventListeners();\r\n\r\n  \treturn this._element;\r\n  }\r\n\r\n  _setEventListeners() {\r\n    this._elementPhoto.addEventListener('click', () => {\r\n\t\t\tthis._handleCardClick();\r\n\t\t});\r\n    this._elementLike.addEventListener( 'click', () => {\r\n\t\t\tthis._handleLikeClick();\r\n\t\t});\r\n    if (Card.myId && this._checkIsMyCard()) {\r\n      this._elementTrash.addEventListener( 'click', () => {\r\n        this._handleRemoveClick();\r\n      });\r\n    } else {\r\n      this._elementTrash.remove();\r\n    }\r\n  }\r\n\r\n  _handleLikeClick() {\r\n    this._handleCardLike();\r\n  }\r\n\r\n  _handleRemoveClick() {\r\n    this._handleCardDelete(this._element);\r\n  }\r\n\r\n}","export default class UserInfo {\r\n  constructor({nameSelector, statusSelector, avatarSelector}) {\r\n    this._name = document.querySelector(nameSelector);\r\n    this._status = document.querySelector(statusSelector);\r\n    this._avatar = document.querySelector(avatarSelector);\r\n  }\r\n  getUserInfo() {\r\n    return {\r\n      name: this._name.textContent,\r\n      status: this._status.textContent,\r\n      avatar: this._avatar.src\r\n    };\r\n  }\r\n  setUserInfo({name, status, avatar}) {\r\n    if (name) {\r\n      this._name.textContent = name;\r\n    }\r\n    if (status) {\r\n      this._status.textContent = status;\r\n    }\r\n    if (avatar) {\r\n      this._avatar.src = avatar;\r\n    }\r\n  }\r\n}","export default class Popup {\r\n  // переменная для хранения элемента открытого попапа\r\n  static popupOpened;\r\n\r\n  constructor(containerSelector) {\r\n    this._container = document.querySelector(containerSelector);\r\n  }\r\n\r\n  // открыть попап и навесить обработчик на Escape\r\n  open() {\r\n    this._container.classList.add('popup_shown');\r\n    window.addEventListener('keydown', this._handleEscClose);\r\n    Popup.popupOpened = this;\r\n  }\r\n\r\n  // закрыть попап и убрать обработчик с Escape\r\n  close() {\r\n    this._container.classList.remove('popup_shown');\r\n    window.removeEventListener('keydown', this._handleEscClose);\r\n    Popup.popupOpened = null;\r\n  }\r\n\r\n  _handleEscClose(evt) {\r\n    if (evt.key === 'Escape') {\r\n      Popup.popupOpened.close();\r\n    }\r\n  }\r\n\r\n  setEventListeners() {\r\n    addEventListener('mousedown', (evt) => {\r\n      if (evt.target.classList.contains('popup_shown')) {\r\n        this.close();\r\n      }\r\n      if (evt.target.classList.contains('popup__close-button')) {\r\n        this.close();\r\n      }\r\n    });\r\n  }\r\n\r\n}","import Popup from './Popup.js';\r\n\r\nexport default class PopupWithImage extends Popup {\r\n  constructor(containerSelector) {\r\n    super(containerSelector);\r\n    this._img = this._container.querySelector('.popup__big-image-photo');\r\n    this._title = this._container.querySelector('.popup__big-image-title');\r\n  }\r\n  open(name, link) {\r\n    super.open();\r\n    this._img.src = link;\r\n    this._img.alt = name;\r\n    this._title.textContent = name;\r\n  }\r\n}","import Popup from './Popup.js';\r\n\r\nexport default class PopupWithForm extends Popup {\r\n  constructor(containerSelector, handleFormSubmit) {\r\n    super(containerSelector);\r\n    this._handleFormSubmit = handleFormSubmit;\r\n    this._form = this._container.querySelector('.popup__form');\r\n    this._inputList = this._container.querySelectorAll('.popup__form-field');\r\n    this._submitButton = this._container.querySelector('.popup__form-submit-button');\r\n  }\r\n\r\n  _getInputValues() {\r\n    this._formValues = {};\r\n    this._inputList.forEach(input => {\r\n      this._formValues[input.name] = input.value;\r\n    });\r\n    return this._formValues;\r\n  }\r\n\r\n  _setInputValues(inputValues) {\r\n    this._inputList.forEach(input => {\r\n      if(inputValues[input.name]) {\r\n        input.value = inputValues[input.name];\r\n        console.log('input name: '+input.name);\r\n      }\r\n    });\r\n  }\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners();\r\n    this._form.addEventListener('submit', (evt) => {\r\n      evt.preventDefault();\r\n      this._handleFormSubmit(this._getInputValues());\r\n      this._form.reset();\r\n    });\r\n  }\r\n\r\n  open(inputValues) {\r\n    super.open();\r\n    this._setInputValues(inputValues);\r\n  }\r\n\r\n  close() {\r\n    super.close();\r\n    this._form.reset();\r\n  }\r\n\r\n  loading(isLoading) {\r\n    if (isLoading) {\r\n      this._submitButton.disabled = true;\r\n      this._submitButton.textContent = 'Сохранение…';\r\n    } else {\r\n      this._submitButton.disabled = false;\r\n      this._submitButton.textContent = 'Сохранить';\r\n    }\r\n  }\r\n}","export default class FormValidator {\r\n\r\n  constructor(settings, formElement) {\r\n    this._formElement = formElement;\r\n\r\n    // создаём поле-массив, в каждый его элемент кладём\r\n    // объект с инпутом и span-ошибкой для этого инпута\r\n    this._formFields = [];\r\n    this._prepareFields(settings);\r\n\r\n    this._formButton = formElement.querySelector(settings.submitButtonSelector);\r\n    this._inactiveButtonClass = settings.inactiveButtonClass;\r\n    this._inputErrorClass = settings.inputErrorClass;\r\n    this._messageErrorClass = settings.messageErrorClass;\r\n  }\r\n\r\n  _prepareFields(settings) {\r\n    const inputs = Array.from(this._formElement.querySelectorAll(settings.inputSelector));\r\n    inputs.forEach( (input) => {\r\n      const formField = {\r\n        field: input,\r\n        error: this._formElement.querySelector(`.popup__form-warning_field_${input.id}`)\r\n      }\r\n      this._formFields.push(formField);\r\n    });\r\n  }\r\n\r\n  // проверяем есть ли в полях ошибки валидации\r\n  _hasInvalidField() {\r\n    return this._formFields.some( (formField) => {\r\n      return !formField.field.validity.valid;\r\n    });\r\n  }\r\n\r\n  // активируем кнопку\r\n  _enableButton() {\r\n    this._formButton.classList.remove(this._inactiveButtonClass);\r\n    this._formButton.disabled = false;\r\n  }\r\n\r\n  // деактивируем кнопку\r\n  _disableButton() {\r\n    this._formButton.classList.add(this._inactiveButtonClass);\r\n    this._formButton.disabled = true;\r\n  }\r\n\r\n  // меняем видимость кнопки на противоположенную\r\n  _toggleButtonActivity() {\r\n    if (this._hasInvalidField()) {\r\n      this._disableButton();\r\n    } else {\r\n      this._enableButton();\r\n    }\r\n  }\r\n\r\n  // прячем span с сообщениеем об ошибке для поля\r\n  _hideFieldError(formField) {\r\n    formField.field.classList.remove(this._inputErrorClass);\r\n    formField.error.classList.remove(this._messageErrorClass);\r\n  }\r\n\r\n  // показываем span с сообщениеем об ошибке для поля\r\n  _showFieldError(formField) {\r\n    formField.field.classList.add(this._inputErrorClass);\r\n    formField.error.classList.add(this._messageErrorClass);\r\n    formField.error.textContent = formField.field.validationMessage;\r\n  }\r\n\r\n  // меняем видимость span с ошибкой на противоположенную\r\n  _toggleFieldError(evt, formField) {\r\n    if(evt.target.validity.valid) {\r\n      this._hideFieldError(formField);\r\n    } else {\r\n      this._showFieldError(formField);\r\n    }\r\n  }\r\n\r\n  // добавляем обработчики на каждое поле, чтобы менять\r\n  // видимость кнопки и span с ошибкой\r\n  _addFieldListener(formField) {\r\n    formField.field.addEventListener('input', (evt) => {\r\n      this._toggleButtonActivity();\r\n      this._toggleFieldError(evt, formField);\r\n    });\r\n  }\r\n\r\n  // публичный метод для включения валидации на форме\r\n  enableValidation() {\r\n    // изначально деактивируем кнопку\r\n    this._toggleButtonActivity();\r\n    // добавляем обработчик на каждое поле\r\n    this._formFields.forEach( (formField) => {\r\n      this._addFieldListener(formField);\r\n    });\r\n    this._formElement.addEventListener('reset', (evt) => {\r\n      this._toggleButtonActivity();\r\n      // FIX: прятать ошибки при сбросе формы\r\n      this._formFields.forEach( (formField) => {\r\n        this._hideFieldError(formField);\r\n      });\r\n    });\r\n  }\r\n\r\n}","export const userEditButton = document.querySelector('.profile__edit-button');\r\nexport const avatarEditButton = document.querySelector('.profile__editpic');\r\nexport const cardAddButton = document.querySelector('.profile__add-button');\r\nexport const cardContainerSelector = '.gallery';\r\nexport const cardTemplateSelector = '#card';\r\n\r\nexport const validationSettings = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__form-field',\r\n  submitButtonSelector: '.popup__form-submit-button',\r\n  inactiveButtonClass: 'popup__form-submit-button_error',\r\n  inputErrorClass: 'popup__form-field_error',\r\n  messageErrorClass: 'popup__form-warning_active',\r\n}\r\n\r\nexport const profileElementsSettings = {\r\n  nameSelector: '.profile__name',\r\n  statusSelector: '.profile__status',\r\n  avatarSelector: '.profile__userpic'\r\n}\r\n\r\n// export const initialCards = [\r\n//   {\r\n//     name: 'Архыз',\r\n//     link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\r\n//   },\r\n//   {\r\n//     name: 'Челябинская область',\r\n//     link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\r\n//   },\r\n//   {\r\n//     name: 'Иваново',\r\n//     link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\r\n//   },\r\n//   {\r\n//     name: 'Камчатка',\r\n//     link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\r\n//   },\r\n//   {\r\n//     name: 'Холмогорский район',\r\n//     link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\r\n//   },\r\n//   {\r\n//     name: 'Байкал',\r\n//     link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\r\n//   }\r\n// ];","// импортировать главный файл стилей для Webpack\r\nimport '../pages/index.css';\r\n\r\n// импортировать все используемые классы\r\nimport Api from '../components/Api.js';\r\nimport Section from '../components/Section.js';\r\nimport Card from '../components/Card.js';\r\nimport UserInfo from '../components/UserInfo.js';\r\nimport PopupWithImage from '../components/PopupWithImage.js';\r\nimport PopupWithForm from '../components/PopupWithForm.js';\r\nimport FormValidator from '../components/FormValidator.js';\r\n\r\n// импортировать настроечные данные\r\nimport {\r\n  // initialCards,\r\n  validationSettings,\r\n  profileElementsSettings,\r\n  userEditButton,\r\n  avatarEditButton,\r\n  cardAddButton,\r\n  cardContainerSelector,\r\n  cardTemplateSelector\r\n} from '../utils/constants.js';\r\n\r\n// элемент-карточка, который будем удалять кнопкой в окошке подтверждения\r\nlet cardForDelete = null;\r\n\r\n// создать инстанс АПИ\r\nconst api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-49',\r\n  headers: {\r\n    authorization: '6814e49a-71aa-4b1e-bb0d-9a0f587cf220',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// создать карточку\r\nconst createCard = ({ id, name, link, likes, isMyLike, ownerId }) => {\r\n  const cardObj = new Card(\r\n    { id, name, link, likes, isMyLike, ownerId },\r\n    cardTemplateSelector,\r\n    () => {\r\n      photoPopup.open(name, link);\r\n    },\r\n    () => {\r\n      if (cardObj._isMyLike) {\r\n        api.dislikeCard(cardObj._id)\r\n          .then((result) => {\r\n            console.log(cardObj._id + ' disliked');\r\n            cardObj._isMyLike = false;\r\n            cardObj._elementLike.classList.remove('gallery__like-button_active');\r\n            cardObj._elementCount.textContent = result.likes.length;\r\n          })\r\n          .catch((err) => {\r\n            console.log(err); // выведем ошибку в консоль\r\n          });\r\n      } else {\r\n        api.likeCard(cardObj._id)\r\n          .then((result) => {\r\n            console.log(cardObj._id + ' liked');\r\n            cardObj._isMyLike = true;\r\n            cardObj._elementLike.classList.add('gallery__like-button_active');\r\n            cardObj._elementCount.textContent = result.likes.length;\r\n          })\r\n          .catch((err) => {\r\n            console.log(err); // выведем ошибку в консоль\r\n          });\r\n      }\r\n    },\r\n    (card) => {\r\n      cardForDelete = card;\r\n      confirmDeletePopup.open({\r\n        'confirmdelete-deleted': cardObj._id\r\n      });\r\n    },\r\n  );\r\n  return cardObj;\r\n}\r\n\r\n// создать карточку по данным из АПИ\r\nconst createCardFromApiData = (cardFromApi) => {\r\n  const isMyLike = cardFromApi.likes.some(element => element._id === Card.myId);\r\n  const cardObj = createCard({\r\n    id: cardFromApi._id,\r\n    name: cardFromApi.name,\r\n    link: cardFromApi.link,\r\n    likes: cardFromApi.likes,\r\n    isMyLike: isMyLike,\r\n    ownerId: cardFromApi.owner._id\r\n  });\r\n  return cardObj;\r\n}\r\n\r\n// отрендерить карточку в секцию по данным карточки из АПИ\r\nconst addCardToSection = (cardFromApi) => {\r\n  const cardObj = createCardFromApiData(cardFromApi);\r\n  const cardElement = cardObj.generate();\r\n  cards.setItem(cardElement);\r\n}\r\n\r\n// создать инстанс пользователя\r\nconst userInfo = new UserInfo(profileElementsSettings);\r\n\r\n// создать попап для формы подтверждения удаления\r\nconst confirmDeletePopup = new PopupWithForm('.popup_confirmdelete', fieldValues => {\r\n  const cardForDeleteId = fieldValues['confirmdelete-deleted'];\r\n  api.removeCard(cardForDeleteId)\r\n    .then((result) => {\r\n      if (cardForDelete) {\r\n        cardForDelete.remove();\r\n      }\r\n      cardForDelete = null;\r\n      confirmDeletePopup.close();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выведем ошибку в консоль\r\n    });\r\n});\r\n\r\n// создать попап для увеличенных фоток\r\nconst photoPopup = new PopupWithImage('.popup_photo');\r\n\r\n// создать попап для формы редактирования профиля\r\nconst userEditPopup = new PopupWithForm('.popup_userinfo', fieldValues => {\r\n  const name = fieldValues['userinfo-name'];\r\n  const status = fieldValues['userinfo-status'];\r\n  const avatar = userInfo.getUserInfo().avatar;\r\n  userEditPopup.loading(true);\r\n  api.setUserInfo(name, status)\r\n    .then((result) => {\r\n      userInfo.setUserInfo({\r\n        name: name,\r\n        status: status,\r\n        avatar: avatar\r\n      });\r\n      userEditPopup.close();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выведем ошибку в консоль\r\n    })\r\n    .finally(() => {\r\n      userEditPopup.loading(false);\r\n    });\r\n});\r\n\r\n// создать попап для формы редактирования аватара\r\nconst avatarEditPopup = new PopupWithForm('.popup_useravatar', fieldValues => {\r\n  const name = userInfo.getUserInfo().name;\r\n  const status = userInfo.getUserInfo().status;\r\n  const avatar = fieldValues['useravatar-avatar'];\r\n  avatarEditPopup.loading(true);\r\n  api.setUserAvatar(avatar)\r\n    .then((result) => {\r\n      userInfo.setUserInfo({\r\n        name: name,\r\n        status: status,\r\n        avatar: avatar\r\n      });\r\n      avatarEditPopup.close();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выведем ошибку в консоль\r\n    })\r\n    .finally(() => {\r\n      avatarEditPopup.loading(false);\r\n    });\r\n});\r\n\r\n// создать попап для формы добавления карточки\r\nconst cardAddPopup = new PopupWithForm('.popup_addcard', fieldValues => {\r\n  const name = fieldValues['addcard-card-title'];\r\n  const link = fieldValues['addcard-card-image'];\r\n  cardAddPopup.loading(true);\r\n  api.addNewCard(name, link)\r\n    .then((result) => {\r\n      addCardToSection(result);\r\n      cardAddPopup.close();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err); // выведем ошибку в консоль\r\n    })\r\n    .finally(() => {\r\n      cardAddPopup.loading(false);\r\n    });\r\n});\r\n\r\n// получить промис с данными юзера\r\nconst getUser = api.getUserInfo();\r\n\r\n// получить промис с карточками\r\nconst getCards = api.getInitialCards();\r\n\r\n// создать пустой массив для карточек с сервера\r\nconst allCards = [];\r\n\r\n// создать секцию для карточек\r\nconst cards = new Section({\r\n  data: allCards, // пока с пустым массивом\r\n  renderer: addCardToSection\r\n}, cardContainerSelector);\r\n\r\n// отрендерить все карточки на страницу\r\nPromise.all([getUser, getCards])\r\n  .then((result) => {\r\n    const user = result[0];\r\n    userInfo.setUserInfo({\r\n      name: user.name,\r\n      status: user.about,\r\n      avatar: user.avatar\r\n    });\r\n    Card.myId = user._id;\r\n    const cardsFromApi = result[1];\r\n    // пройтись по массиву в обратном порядке, чтобы свежие карточки выводились в начале\r\n    for (let i = cardsFromApi.length - 1; i >= 0; i--) {\r\n      const item = cardsFromApi[i];\r\n      allCards.push(item);\r\n    }\r\n    cards.renderItems()\r\n  });\r\n\r\n// создать инстансы валидации\r\nconst userFormValidator = new FormValidator(\r\n  validationSettings,\r\n  document.querySelector('.popup__form_data_addcard')\r\n);\r\nconst cardFormValidator = new FormValidator(\r\n  validationSettings,\r\n  document.querySelector('.popup__form_data_userinfo')\r\n);\r\nconst avatarFormValidator = new FormValidator(\r\n  validationSettings,\r\n  document.querySelector('.popup__form_data_useravatar')\r\n);\r\n\r\n// запустить валидацию\r\nuserFormValidator.enableValidation();\r\ncardFormValidator.enableValidation();\r\navatarFormValidator.enableValidation();\r\n\r\n// НАВЕСИТЬ ОБРАБОТЧИКИ\r\n\r\n// на попапы\r\nphotoPopup.setEventListeners();\r\nconfirmDeletePopup.setEventListeners();\r\ncardAddPopup.setEventListeners();\r\nuserEditPopup.setEventListeners();\r\navatarEditPopup.setEventListeners();\r\n\r\n// на кнопку добавления карточки\r\ncardAddButton.addEventListener('click', () => {\r\n  cardAddPopup.open({});\r\n});\r\n\r\n// на кнопку редактирования пользователя\r\nuserEditButton.addEventListener('click', () => {\r\n  const data = userInfo.getUserInfo();\r\n  userEditPopup.open({\r\n    'userinfo-name': data.name,\r\n    'userinfo-status': data.status\r\n  });\r\n});\r\n\r\n// на кнопку редактирования аватара\r\navatarEditButton.addEventListener('click', () => {\r\n  const data = userInfo.getUserInfo();\r\n  avatarEditPopup.open({\r\n    // FIX: не показывать в форме ссылку на текущий аватар\r\n    // 'useravatar-avatar': data.avatar,\r\n  });\r\n});"],"names":["Api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","name","about","method","body","JSON","stringify","url","avatar","cardId","link","Section","containerSelector","data","renderer","_renderedItems","_renderer","_container","document","querySelector","forEach","item","element","prepend","Card","templateSelector","handleCardClick","handleCardLike","handleCardDelete","id","likes","isMyLike","ownerId","_id","_title","_image","_likes","_likesCount","length","_isMyLike","_ownerId","_templateSelector","_handleCardClick","_handleCardLike","_handleCardDelete","myId","content","cloneNode","_element","_getElement","_elementPhoto","_elementTitle","_elementTrash","_elementLike","_elementCount","src","alt","textContent","classList","add","_setEventListeners","addEventListener","_handleLikeClick","_checkIsMyCard","_handleRemoveClick","remove","UserInfo","nameSelector","statusSelector","avatarSelector","_name","_status","_avatar","Popup","window","_handleEscClose","popupOpened","removeEventListener","evt","key","close","target","contains","PopupWithImage","_img","PopupWithForm","handleFormSubmit","_handleFormSubmit","_form","_inputList","querySelectorAll","_submitButton","_formValues","input","value","inputValues","console","log","preventDefault","_getInputValues","reset","_setInputValues","isLoading","disabled","FormValidator","settings","formElement","_formElement","_formFields","_prepareFields","_formButton","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_messageErrorClass","messageErrorClass","Array","from","inputSelector","formField","field","error","push","some","validity","valid","_hasInvalidField","_disableButton","_enableButton","validationMessage","_hideFieldError","_showFieldError","_toggleButtonActivity","_toggleFieldError","_addFieldListener","userEditButton","avatarEditButton","cardAddButton","validationSettings","formSelector","cardForDelete","api","authorization","addCardToSection","cardFromApi","cardElement","owner","cardObj","photoPopup","open","dislikeCard","result","catch","err","likeCard","card","confirmDeletePopup","createCardFromApiData","generate","cards","setItem","userInfo","fieldValues","cardForDeleteId","removeCard","userEditPopup","getUserInfo","loading","setUserInfo","finally","avatarEditPopup","setUserAvatar","cardAddPopup","addNewCard","getUser","getCards","getInitialCards","allCards","all","user","cardsFromApi","i","renderItems","userFormValidator","cardFormValidator","avatarFormValidator","enableValidation","setEventListeners"],"sourceRoot":""}